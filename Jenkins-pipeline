pipeline {
    agent any
    environment {
        scannerHome=tool 'mysonar'
    }

    stages {
        stage('CleanWS') {
            steps {
                cleanWs()
            }
        }
        stage('Code') {
            steps{
                git branch: 'main', url: 'https://github.com/abdulshaik0811/Zomato-Repo.git'
            }
        }
        stage('CQA') {
            steps {
                withSonarQubeEnv('mysonar') {
                     sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=zomato"
                }
            }
        }
        stage('Quality gates') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonarcredentials'
                }
            }
        }
        stage('Build') {
            steps {
                sh 'docker build -t image1 .'
            }
        }
        stage('scan') {
            steps {
                sh 'trivy image image1'
            }
        }
        stage ('tag') {
            steps {
                sh 'docker tag image1 abdulshaik0811/node-project:zomato'
            }
        }
        stage ('push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'Docker') {
                        sh 'docker push abdulshaik0811/node-project:zomato'
                    }
                }
            }
        }
        stage ('Deploy') {
            steps {
                sh 'docker run -itd --name zomato -p 3000:3000 abdulshaik0811/node-project:zomato'
            }
        }
    }
}
